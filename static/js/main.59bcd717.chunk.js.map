{"version":3,"sources":["components/User/User.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["User","_ref","user","name","phone","email","react_default","a","createElement","Fragment","className","TodoItem","todo","title","completed","id","type","checked","components_User_User","TodoList","todos","map","components_TodoItem_TodoItem","key","TODOS_URL","USERS_URL","getTodosWithUsers","todosList","usersList","_objectSpread","find","userId","App","state","initPreparedTodos","preparedTodos","isLoading","error","isShowButton","isShowOnlyCompleted","isSortedByTitle","isSortedByUserName","loadTodos","_this","setState","Promise","all","fetch","then","_ref2","Object","slicedToArray","todosResponse","usersResponse","json","_ref3","_ref4","todosData","usersData","catch","err","handleTodosSort","_ref5","target","value","prevState","toConsumableArray","filter","sort","b","localeCompare","_this$state","this","disabled","concat","message","onClick","components_TodoList_TodoList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.59bcd717.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => {\n  const { name, phone, email } = user;\n\n  return (\n    <>\n      <p className=\"todo-list__item-name\">{name}</p>\n      <p>{phone}</p>\n      <p>{email}</p>\n    </>\n  );\n};\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from '../User/User';\n\nconst TodoItem = ({ todo }) => {\n  const {\n    title, completed, user, id,\n  } = todo;\n\n  return (\n    <div className=\"todo-list__item\">\n      <h2>{id}</h2>\n      <h4>{title}</h4>\n      <input type=\"checkbox\" checked={completed} />\n      <User user={user} />\n    </div>\n  );\n};\n\nconst shape = PropTypes.shape({\n  title: PropTypes.string,\n  completed: PropTypes.bool,\n  id: PropTypes.number,\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    phone: PropTypes.string,\n    email: PropTypes.string,\n  }),\n});\n\nTodoItem.propTypes = {\n  todo: shape.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../TodoItem/TodoItem';\nimport './TodoList.css';\n\nconst TodoList = ({ todos }) => todos.map(todo => <TodoItem todo={todo} key={todo.id} />);\n\nconst shape = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n});\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(shape).isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\n\nimport TodoList from './components/TodoList/TodoList';\n\nconst TODOS_URL = 'https://jsonplaceholder.typicode.com/todos';\nconst USERS_URL = 'https://jsonplaceholder.typicode.com/users';\n\nfunction getTodosWithUsers(todosList, usersList) {\n  return todosList.map(todo => ({\n    ...todo,\n    user: usersList.find(user => user.id === todo.userId),\n  }));\n}\n\nclass App extends React.Component {\n  state = {\n    initPreparedTodos: [],\n    preparedTodos: [],\n    isLoading: false,\n    error: null,\n    isShowButton: true,\n    isShowOnlyCompleted: false,\n    isSortedByTitle: false,\n    isSortedByUserName: false,\n  }\n\n  loadTodos = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    Promise.all([\n      fetch(TODOS_URL),\n      fetch(USERS_URL),\n    ])\n      .then(([todosResponse, usersResponse]) => (\n        Promise.all([todosResponse.json(), usersResponse.json()])))\n      .then(([todosData, usersData]) => this.setState({\n        isLoading: false,\n        isShowButton: false,\n        initPreparedTodos: getTodosWithUsers(todosData, usersData),\n        preparedTodos: getTodosWithUsers(todosData, usersData),\n      }))\n      .catch((err) => {\n        this.setState({\n          isLoading: false,\n          error: err,\n        });\n      });\n  }\n\n  handleTodosSort = ({ target: { value } }) => {\n    switch (value) {\n      case 'completed':\n        this.setState(prevState => ({\n          preparedTodos: [...prevState.initPreparedTodos].filter(todo => (\n            prevState.isShowOnlyCompleted\n              ? !todo.completed\n              : todo.completed)),\n          isShowOnlyCompleted: !prevState.isShowOnlyCompleted,\n          isSortedByUserName: false,\n          isSortedByTitle: false,\n        }));\n        break;\n\n      case 'title':\n        this.setState(prevState => ({\n          preparedTodos: [...prevState.initPreparedTodos].sort((a, b) => (\n            prevState.isSortedByTitle\n              ? null\n              : a.title.localeCompare(b.title))),\n          isSortedByTitle: !prevState.isSortedByTitle,\n          isSortedByUserName: false,\n          isShowOnlyCompleted: false,\n        }));\n        break;\n\n      case 'user':\n        this.setState(prevState => ({\n          preparedTodos: [...prevState.initPreparedTodos].sort((a, b) => (\n            prevState.isSortedByUserName\n              ? null\n              : a.user.name.localeCompare(b.user.name))),\n          isSortedByUserName: !prevState.isSortedByUserName,\n          isShowOnlyCompleted: false,\n          isSortedByTitle: false,\n        }));\n        break;\n\n      default:\n        this.setState(prevState => ({\n          preparedTodos: prevState.initPreparedTodos,\n        }));\n    }\n  }\n\n  render() {\n    const {\n      preparedTodos,\n      isLoading,\n      error,\n      isShowButton,\n      isShowOnlyCompleted,\n      isSortedByTitle,\n      isSortedByUserName,\n    } = this.state;\n\n    if (isLoading) {\n      return (\n        <div className=\"App todo-list\">\n          <h1>Dynamic list of todos</h1>\n          <button\n            className=\"button\"\n            type=\"button\"\n            disabled\n          >\n            Loading...\n          </button>\n        </div>\n      );\n    }\n\n    if (error) {\n      return (\n        <div className=\"App todo-list\">\n          <div>{`Error: ${error.message} data`}</div>\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.loadTodos}\n          >\n            Reload\n          </button>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App todo-list\">\n        <h1>Dynamic list of todos</h1>\n        {isShowButton\n          ? (\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={this.loadTodos}\n            >\n              Load\n            </button>\n          )\n          : (\n            <>\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={this.handleTodosSort}\n                value=\"completed\"\n              >\n                {isShowOnlyCompleted ? 'show initial list' : 'show completed'}\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={this.handleTodosSort}\n                value=\"title\"\n              >\n                {isSortedByTitle ? 'show initial list' : 'sort by title'}\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={this.handleTodosSort}\n                value=\"user\"\n              >\n                {isSortedByUserName ? 'show initial list' : 'sort by User'}\n              </button>\n            </>\n          )\n        }\n        <TodoList todos={preparedTodos} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}