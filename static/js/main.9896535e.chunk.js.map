{"version":3,"sources":["components/User/User.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["User","_ref","user","name","phone","email","react_default","a","createElement","Fragment","className","TodoItem","todo","title","completed","id","type","checked","components_User_User","TodoList","todos","map","components_TodoItem_TodoItem","key","TODOS_URL","USERS_URL","getTodosWithUsers","todosList","usersList","_objectSpread","find","userId","App","state","initPreparedTodos","preparedTodos","isLoading","error","isShowButton","isShowOnlyCompleted","isSortedByTitle","isSortedByUserName","loadTodos","_this","setState","Promise","all","fetch","then","_ref2","Object","slicedToArray","todosResponse","usersResponse","json","_ref3","_ref4","todosData","usersData","catch","err","toggleCompleted","prevState","toConsumableArray","filter","toggleSortByTitle","sort","b","localeCompare","toggleSortByUserName","console","log","this","_this$state","disabled","concat","message","onClick","components_TodoList_TodoList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.9896535e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => {\n  const { name, phone, email } = user;\n\n  return (\n    <>\n      <p className=\"todo-list__item-name\">{name}</p>\n      <p>{phone}</p>\n      <p>{email}</p>\n    </>\n  );\n};\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from '../User/User';\n\nconst TodoItem = ({ todo }) => {\n  const {\n    title, completed, user, id,\n  } = todo;\n\n  return (\n    <div className=\"todo-list__item\">\n      <h2>{id}</h2>\n      <h4>{title}</h4>\n      <input type=\"checkbox\" checked={completed} />\n      <User user={user} />\n    </div>\n  );\n};\n\nconst shape = PropTypes.shape({\n  title: PropTypes.string,\n  completed: PropTypes.bool,\n  id: PropTypes.number,\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    phone: PropTypes.string,\n    email: PropTypes.string,\n  }),\n});\n\nTodoItem.propTypes = {\n  todo: shape.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../TodoItem/TodoItem';\nimport './TodoList.css';\n\nconst TodoList = ({ todos }) => todos.map(todo => <TodoItem todo={todo} key={todo.id} />);\n\nconst shape = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n});\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(shape).isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\n\nimport TodoList from './components/TodoList/TodoList';\n\nconst TODOS_URL = 'https://jsonplaceholder.typicode.com/todos';\nconst USERS_URL = 'https://jsonplaceholder.typicode.com/users';\n\nfunction getTodosWithUsers(todosList, usersList) {\n  return todosList.map(todo => ({\n    ...todo,\n    user: usersList.find(user => user.id === todo.userId),\n  }));\n}\n\nclass App extends React.Component {\n  state = {\n    initPreparedTodos: [],\n    preparedTodos: [],\n    isLoading: false,\n    error: null,\n    isShowButton: true,\n    isShowOnlyCompleted: false,\n    isSortedByTitle: false,\n    isSortedByUserName: false,\n  }\n\n  loadTodos = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    Promise.all([\n      fetch(TODOS_URL),\n      fetch(USERS_URL),\n    ])\n      .then(([todosResponse, usersResponse]) => (\n        Promise.all([todosResponse.json(), usersResponse.json()])))\n      .then(([todosData, usersData]) => this.setState({\n        isLoading: false,\n        isShowButton: false,\n        initPreparedTodos: getTodosWithUsers(todosData, usersData),\n        preparedTodos: getTodosWithUsers(todosData, usersData),\n      }))\n      .catch((err) => {\n        this.setState({\n          isLoading: false,\n          error: err,\n        });\n      });\n  }\n\n  toggleCompleted = () => {\n    if (!this.state.isShowOnlyCompleted) {\n      this.setState(prevState => ({\n        preparedTodos: [...prevState.preparedTodos].filter(todo => todo.completed),\n        isShowOnlyCompleted: true,\n      }));\n    } else {\n      this.setState(prevState => ({\n        preparedTodos: [...prevState.initPreparedTodos],\n        isShowOnlyCompleted: false,\n        isSortedByTitle: false,\n        isSortedByUserName: false,\n      }));\n    }\n  }\n\n  toggleSortByTitle = () => {\n    if (!this.state.isSortedByTitle) {\n      this.setState(prevState => ({\n        preparedTodos: [...prevState.preparedTodos].sort((a, b) => a.title.localeCompare(b.title)),\n        isSortedByTitle: true,\n      }));\n    } else {\n      this.setState(prevState => ({\n        preparedTodos: [...prevState.initPreparedTodos],\n        isSortedByTitle: false,\n        isSortedByUserName: false,\n        isShowOnlyCompleted: false,\n      }));\n    }\n  }\n\n  toggleSortByUserName = () => {\n    if (!this.state.isSortedByUserName) {\n      this.setState(prevState => ({\n        preparedTodos: [...prevState.preparedTodos].sort((a, b) => a.user.name.localeCompare(b.user.name)),\n        isSortedByUserName: true,\n      }));\n    } else {\n      this.setState(prevState => ({\n        preparedTodos: [...prevState.initPreparedTodos],\n        isSortedByUserName: false,\n        isSortedByTitle: false,\n        isShowOnlyCompleted: false,\n      }));\n    }\n  }\n\n  render() {\n    console.log(this.state.preparedTodos);\n    const {\n      preparedTodos, isLoading, error, isShowButton,\n    } = this.state;\n\n    if (isLoading) {\n      return (\n        <div className=\"App todo-list\">\n          <h1>Dynamic list of todos</h1>\n          <button\n            className=\"button\"\n            type=\"button\"\n            disabled\n          >\n            Loading...\n          </button>\n        </div>\n      );\n    }\n\n    if (error) {\n      return (\n        <div className=\"App todo-list\">\n          <div>{`Error: ${error.message} data`}</div>\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.loadTodos}\n          >\n            Reload\n          </button>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App todo-list\">\n        <h1>Dynamic list of todos</h1>\n        {isShowButton && (\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.loadTodos}\n          >\n            Load\n          </button>\n        )\n          || (\n            <>\n              {this.state.isShowOnlyCompleted\n                ? (\n                  <button\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={this.toggleCompleted}\n                  >\n                    show all\n\n                  </button>\n                )\n                : (\n                  <button\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={this.toggleCompleted}\n                  >\n                    show completed\n                  </button>\n                )}\n              {this.state.isSortedByTitle\n                ? (\n                  <button\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={this.toggleSortByTitle}\n                  >\n                    show all\n                  </button>\n                )\n                : (\n                  <button\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={this.toggleSortByTitle}\n                  >\n                    sort by title\n                  </button>\n                )\n              }\n              {this.state.isSortedByUserName\n                ? (\n                  <button\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={this.toggleSortByUserName}\n                  >\n                    show all\n                  </button>\n                )\n                : (\n                  <button\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={this.toggleSortByUserName}\n                  >\n                    sort by User\n                  </button>\n                )\n              }\n            </>\n          )\n        }\n        <TodoList todos={preparedTodos} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}